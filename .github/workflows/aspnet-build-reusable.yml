name: Build Reusable Workflow

on:
  workflow_call:
    inputs:
      language:
        description: 'Programming language for the build'
        required: true
        type: string
      environment:
        description: 'Deployment environment'
        required: true
        type: string
      dotnet-version:
        description: 'The .NET version to use'
        required: true
        type: string
    # Não é necessário definir 'secrets' aqui no arquivo reutilizável

jobs:
  build:
    runs-on: windows-latest  # Ambiente Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore dependencies
        run: |
          cd aspnet-pipelines
          dotnet restore

      - name: Build project
        run: |
          cd aspnet-pipelines
          dotnet build --configuration Release

      - name: Run unit tests
        run: |
          cd aspnet-pipelines
          dotnet test --configuration Release

      - name: Publish project
        run: |
          cd aspnet-pipelines
          dotnet publish --configuration Release --output ./publish

      # Instalar o scanner SonarCloud
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      # Iniciar a análise no SonarCloud
      - name: Run SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Para acessar informações do PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Token para autenticação com o SonarCloud
        run: |
          cd aspnet-pipelines
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"jpvieirah_aspnet-pipelines" /o:"jpvieirah" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      # Listar conteúdo da pasta de publicação para depuração
      - name: List publish directory contents
        run: |
          cd aspnet-pipelines
          echo "Listing contents of the publish directory:"
          dir ./publish

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aspnet-build
          path: aspnet-pipelines/publish
          if-no-files-found: warn
